<%= semantic_form_for [:admin, @item], html: { enctype: "multipart/form-data" }  do |f| %>

  <%= f.inputs name: "All fields with * are REQUIRED" do %>
    <%= f.input :category,
                as: :select,
                member_label: 'title',
                member_value: :id,
                label: "Category",
                required: true,
                hint: "Select Article category"
    %>
    <%= f.input :language,
                as: :select,
                member_label: 'description',
                member_value: :id,
                label: "Language",
                required: true,
                hint: "Select a language for this article"
    %>
    <%= f.input :title,
                label: "Headline",
                required: true,
                hint: "Ideally 60 characters. Max 100." %>
                
    <%= f.input :abstract,
                hint: "Ideally 90 characters. Max 120.",
                required: true,
                input_html: { rows: 2, required: true}
    %>
    
    <%= f.input :body,
                label: "Main Content",
                required: true,
                input_html: { rows: 60, cols: 120},
                hint: "Do Not use H1 headings. Use only H2, H3 and H4. If you want a new paragraph, simply hit 'RETURN' key. If you donâ€™t want a new paragraph and just want a line break, hit 'SHIFT+RETURN' keys. - If you are copying and pasting from a website, it is recommended to paste first to Notepad.exe/TextEdit.app then copy again and paste here."
    %>

    <%= f.input :keywords,
                label: "Keywords",
                required: false,
                hint: "Keywords related to the article, such as names, events, special keywords, or any keyword with a ralationship to other articles. Examples: Jamahiriya, USA, Illuminati, Rockefeller, New World Order, Free Energy, Monsanto, GMO, IMF, Pepsi, Gold, banking, Wikileaks, Anonymous. It will improve discovery of related items. You may also use special keywords to relate other items. It's invisble to the users. Less keywords will give more related items but less accurate, more keywords will give less related items but more accurate. You need to find a good balance."
    %>
    <%= f.input :published_at,
          as: "string",
          label: "Publication Date",
          require: true,
          hint: "Time to go live. Timezone used for picking date: '#{Time.zone}' from your Profile. 
            (Required)"
    %>
    <%= f.input :expires_on,
        as: "string",
        label: "Expire Date",
        # input_html: { value: f.object.expires_on.localtime },
        hint: "Expiration date of article (default: 10 years)."
    %>
  <% end %>

  <%= f.inputs name: "Author and Source" do %>
    <%= f.input :author_name, hint: "If blank, your 'Name' will be used", placeholder: "Original Author name" %>
    <%= f.input :author_email %>
    <%= f.input :source_url, hint: "If you wrote the article, leave empty", placeholder: "http://" %>
    <%= f.input :original, label: "Original author", hint: "Are you the original Author of this article?" %>
    <br />
  <% end %>
  
  <%= f.inputs name: "Youtube Video" do %>
    <%= f.input :youtube_id, label: "Youtube Video ID",
          hint: "Needed if one of the options below are checked. example: aJURNC0e6Ek"
    %>
    <%= f.input :youtube_vid, label: "Automatically Embed Youtube Video",
          hint: "The youtube video will be added to the Top of the article."
    %>
    <br />
    <%= f.input :youtube_img, label: "Automatically Set Youtube Image",
          hint: "Automatically set main image from a youtube screenshot."
    %>
    <br />
    <%= f.input :youtube_res, label: "Video Resolution",
          hint: "Set this if you have multiple youtube videos on the same page.",
          as: :select,
          collection: ["240x360", "360x480", "400x540", "480x720", "600x800"],
          include_blank: "Automatically"
    %>
    <br />
  <% end %>
  
  
  <%= f.inputs name: "Tags" do %>
    <div class="medium_box">
      <%= f.input :general_tags, as: :check_boxes, label: "General",
          collection: GeneralTag.find(:all, order: "title ASC"),
          hint: "Select 2-4 tags, but no more than 6"
      %>
    </div>
    <div class="medium_box">
      <%= f.input :region_tags, as: :check_boxes, label: "Regional",
          collection: RegionTag.find(:all, order: "title ASC")
      %>
    </div>
    <div class="medium_box">
      <%= f.input :country_tags, as: :check_boxes, label: "Countries",
          collection: CountryTag.find(:all, order: "title ASC")
      %>
    </div>
  <% end %>
  
  <% if current_admin_user.has_any_role?(:editor,:admin,:security) %>
    <%= f.inputs name: "Status Codes" do %>
      <%= f.input :draft, hint: "Keep as draft if you haven't finished editing." %>
      <br />
      
      <%= f.input :featured, label: "Highlight",
            hint: "Article will be featured on Highlights box in front page" %>
      <br />
      
      <%= f.input :sticky, label: "Sticky",
          hint: "Article will remain first on top of Highlights box" %>
      <br />

      <%= f.input :allow_comments, hint: "Allow users to comment" %>
      <br />

      <% if f.object.twitter_shares.empty? %>
        <%= f.input :share_twitter, as: "boolean",
            label: "Twitter",
            hint: "Auto post to Twitter after publication? Only set it if item is ready and not Draft. It can only be posted once. Performed 3 minutes after Publication." %>
      <br />
      <% else %>
        <li class="boolean input optional">
          <label><b>Already posted to twitter: <%= f.object.twitter_shares.first.status %></b></label>
        </li>
      <% end %>

      <% if false %>
        <!-- Facebook Sharing Disabled Temporarily -->
        <% if f.object.facebook_shares.empty? %>
          <%= f.input :share_facebook, as: "boolean",
              label: "Facebook",
              hint: "Auto post to Facebook after publication? Only set it if item is ready and not Draft. It can only be posted once. Performed 3 minutes after Publication." %>
        <br />
        <% else %>
          <li class="boolean input optional">
            <label><b>Already posted to Facebook: <%= f.object.facebook_shares.first.status %></b></label>
          </li>
        <% end %>
      <% end %>

      <% if !f.object.email_delivery_sent? %>
        <%= f.input :send_emails, as: "boolean",
            hint: "Send emails upon publication? Only set it if item is ready and not Draft. It can only be posted once. Email will be sent 3 minutes after Publication." %>
        <br />
      <% elsif f.object.email_delivery_sent? %>
        <li class="boolean input optional">
          <label><b>Already Sent Emails</b></label>
        </li>
      <% elsif f.object.email_delivery_queued? %>
        <li class="boolean input optional">
          <label><b>Email Queued for delivery</b></label>
        </li>
      <% end %>

      <br />
    <% end %>

  <% else %>
    <%= f.inputs name: "Status Codes" do %>
      <%= f.input :draft,
            as: :hidden,
            input_html: { value: true }
      %>
      <br />
    <% end %>
  <% end %>

  
  <% f.object.attachments.build %>
  <%= f.inputs name: "Images", multipart: true do %>
    <div class="item_attachments">
      <%= f.semantic_fields_for :attachments do |attachment| %>
        <% if attachment.object.new_record? %>
          <br />
          <%= attachment.input :image, as: "file", label: "Choose file to upload", hint: "Max Size: 4MB" %>
          <br />
          <%= attachment.input :title, as: "string", label: "Image Caption ",
              hint: "It is highly recommended to add an image caption." %>
        
        <% elsif f.object.has_image? %>

          <% if attachment.object.existing_attachment %>

            <h4><%= attachment.object.existing_attachment.title %></h4>
            <%= link_to(image_tag(attachment.object.existing_attachment.image.medium, class: "show_item_img"), admin_attachment_path(attachment.object.existing_attachment)) %>
            <p>
              <%= link_to "Edit", edit_admin_attachment_path(attachment.object.existing_attachment) %> - 
              <%= link_to "Delete", admin_attachment_path(attachment.object), method: 'delete', 
                    confirm: "Are you sure you want to delete the linked image?" 
              %>
            </p>

          <% else %>

            <h4><%= attachment.object.title %></h4>
            <%= link_to(image_tag(attachment.object.image.medium, class: "show_item_img"), admin_attachment_path(attachment.object)) %>
            <p>
              <%= link_to "Edit", edit_admin_attachment_path(attachment.object) %> - 
              <%= link_to "Delete", admin_attachment_path(attachment.object), method: 'delete', 
                    confirm: "Are you sure you want to delete this image?" 
              %>
            </p>

          <% end %>

        <% end %>

      <% end %>
    </div>
    <br />
    <%= f.input :existing_attachment_id,
                as: "number",
                placeholder: '12345',
                input_html: {class: 'small'},
                hint: "Enter image ID for and existing image in the system"
        %>
  <% end %>
  
  <%= f.inputs name: "Notes and Updates" do %>
    <%= f.input :author_status,
          as: :select,
          include_blank: "-- Select Status",
          label: "Author Status",
          collection: ["Ready to go", "Needs Editing", "Needs Translation", "Needs Image"]
    %>
    <%= f.input :editor_notes,
          label: "Author Notes",
          as: "text",
          input_html: {rows: 4},
          hint: "If necessary, add your personal notes, or to other editors and authors",
          placeholder: "Your personal notes, or notes to other Editors and Authors"
    %>
    <% unless f.object.new_record? %>
      <% @reason = "Reverted to version #{f.object.version.index}" if (params[:version].present? && f.object.version) %>
      <%= f.input :updated_reason, input_html: { value: @reason }, label: "Update Reason", as: "string", hint: "Provide a reason for updating this article." %>
    <% end %>
  <% end %>

  <%= f.input :lock_version, as: :hidden %>

  <% unless @item.new_record? %>
  <fieldset class="inputs">
    <legend><span>History Preview</span></legend>
    <ol>
      <% f.object.versions.each_with_index do |v,i| %>
        <% unless i==0 %>
          <li>
            <%= link_to "Roll Back Version #{i}", version: i %>: 
            <%= time_ago_in_words(v.created_at) %> ago - 
            <%= v.tag %> 
            <% if user = User.find(v.whodunnit) %>
              (<%= user.title %>)
            <% end %>
          </li>
        <% end %>
      <% end %>
      <% if params[:version].present? %>
        <li> <%= link_to "Go to Latest Version", edit_admin_item_path(@item.id) %> </li>
      <% end %>
    </ol>
  </fieldset>
  <% end %>
  
  <%= f.actions do %>
    <%= f.action :submit, button_html: {class: "primary", data: {disable_with: 'Sending...'}} %>
  <% end %>
<% end %>


<%= render 'new_item_script' %>