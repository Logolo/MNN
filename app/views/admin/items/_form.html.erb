<%= semantic_form_for [:admin, @item], html: { enctype: "multipart/form-data" }  do |f| %>

  <%= f.inputs name: "All fields with * are required" do %>
    <%= f.input :category,
                as: :select,
                member_label: 'title',
                member_value: :id,
                label: "Category",
                required: true,
                hint: "Select Article category"
    %>
    <%= f.input :language,
                as: :select,
                member_label:  'description',
                member_value: :id,
                label: "Language",
                required: true,
                hint: "Select a language for this article"
    %>
    <%= f.input :title,
                label: "Headline",
                required: true,
                hint: "Ideally 60 characters. Max 100." %>
                
    <%= f.input :abstract,
                hint: "Ideally 80 characters. Max 120.",
                required: true,
                input_html: { rows: 2, required: true}
    %>
    
    <%= f.input :body,
                label: "Main Content",
                required: true,
                input_html: { rows: 60, cols: 120},
                hint: "If you want a new paragraph, simply hit 'RETURN'. If you donâ€™t want a new paragraph and just want a line break, hit 'SHIFT RETURN'. - If you are copying and pasting from a website, it is recommended to paste first to Notepad.exe/TextEdit.app then copy again to paste here."
    %>
    <%= f.input :keywords,
                label: "Keywords",
                required: false,
                hint: "Keywords related to the article, such as names, events, special keywords, or any keyword that might have ralation to other articles. Examples: Jamahiriya, USA, Illuminati, Rockefeller, New World Order, Free Energy, Monsanto, GMO, IMF, Pepsi, Gold, banking, cocaine, etc... It will greatly improve discovery of related items. You may also use special keywords to relate other items. It's invisble to the users. Less keywords will give more related items but less accurate, more keywords will give less related items but more accurate. You need to find a good balance."
    %>
    <%= f.input :published_at,
          # value: f.object.published_at.localtime,
          as: "string",
          label: "Publication Date",
          require: true,
          hint: "When to go live. Timezone used for picking date: '#{Time.zone}' (from your Profile). It will be converted to UTC after saving. (Required)"
    %>
    <%= f.input :expires_on,
        as: "string",
        label: "Expire Date",
        value: f.object.expires_on.localtime,
        hint: "Expiration date of article (default: 10 years). It will be converted to UTC after saving."
    %>
  <% end %>
  
  <%= f.inputs name: "Youtube Video" do %>
    <%= f.input :youtube_id, label: "Youtube Video ID",
          hint: "Needed if one of the options below are checked. example: aJURNC0e6Ek"
    %>
    <%= f.input :youtube_vid, label: "Automatically Embed Youtube Video",
          hint: "The youtube video will be added to the Top of the article."
    %>
    <br />
    <%= f.input :youtube_img, label: "Automatically Set Youtube Image",
          hint: "Automatically set main image from a youtube screenshot"
    %>
    <br />
  <% end %>
  
  
  <%= f.inputs name: "Tags" do %>
    <div class="medium_box">
      <%= f.input :general_tags, as: :check_boxes, label: "General",
          collection: GeneralTag.find(:all, order: "title ASC")
      %>
    </div>
    <div class="medium_box">
      <%= f.input :region_tags, as: :check_boxes, label: "Regional",
          collection: RegionTag.find(:all, order: "title ASC") 
      %>
    </div>
    <div class="medium_box">
      <%= f.input :country_tags, as: :check_boxes, label: "Countries",
          collection: CountryTag.find(:all, order: "title ASC") 
      %>
    </div>
  <% end %>
  
  <%= f.inputs name: "Author and Source" do %>
    <%= f.input :author_name, hint: "If blank, your 'Name' will be used" %>
    <%= f.input :author_email %>
    <%= f.input :source_url, hint: "If you wrote the article, leave empty" %>
    <%= f.input :original, label: "Original author", hint: "Are you the original Author of this article?" %>
    <br />
  <% end %>
  
  <% if current_admin_user.has_any_role?(:editor,:admin,:security) %>
    <%= f.inputs name: "Status Codes" do %>
      <%= f.input :draft, hint: "Keep as draft if you haven't finished editing." %>
      <br />
      <%= f.input :featured, label: "Highlight",
            hint: "Article will be featured on Highlights box in front page" %>
      <br />
      <%= f.input :sticky, label: "Sticky",
          hint: "Article will remain first on top of Highlights box" %>
      <br />
      <%= f.input :allow_comments, hint: "Allow users to comment" %>
      <br />
      <% if f.object.twitter_shares.empty? %>
        <%= f.input :share_twitter, as: "boolean",
            hint: "Auto post to twitter upon publication? Only set it if item is ready and not Draft. It can only be posted once. Performed 3 minutes after Publication." %>
      <% else %>
        <li class="boolean input optional">
          <label><b>Already posted to twitter</b></label>
        </li>
      <% end %>
      <br />
      <% if !f.object.email_delivery_sent? %>
        <%= f.input :send_emails, as: "boolean",
            hint: "Send emails upon publication? Only set it if item is ready and not Draft. It can only be posted once. Email will be sent 3 minutes after Publication." %>
      <% elsif f.object.email_delivery_sent? %>
        <li class="boolean input optional">
          <label><b>Already Sent Emails</b></label>
        </li>
      <% elsif f.object.email_delivery_queued? %>
        <li class="boolean input optional">
          <label><b>Email Queued for delivery</b></label>
        </li>
      <% end %>
      <br />
    <% end %>

  <% else %>
    <%= f.inputs name: "Status Codes" do %>
      <%= f.input :draft,
            as: :hidden,
            value: true
      %>
      <br />
    <% end %>
  <% end %>

  
  <% f.object.attachments.build %>
  <%= f.inputs name: "Images", multipart: true do %>
    <div class="item_attachments">
      <%= f.semantic_fields_for :attachments do |attachment| %>
        <% if attachment.object.new_record? %>
          <br />
          <%= attachment.input :image, as: "file", label: "Choose file to upload", hint: "Max Size: 4MB" %>
          <br />
          <%= attachment.input :title, as: "string", label: "Image Caption ",
              hint: "It is highly recommended to add an image caption." %>
        
        <% elsif f.object.has_image? %>

          <% if attachment.object.existing_attachment %>

            <h4><%= attachment.object.existing_attachment.title %></h4>
            <%= link_to(image_tag(attachment.object.existing_attachment.image.medium, class: "show_item_img"), admin_attachment_path(attachment.object.existing_attachment)) %>
            <p>
              <%= link_to "Edit", edit_admin_attachment_path(attachment.object.existing_attachment) %> - 
              <%= link_to "Delete", admin_attachment_path(attachment.object), method: 'delete', 
                    confirm: "Are you sure you want to delete the linked image?" 
              %>
            </p>

          <% else %>

            <h4><%= attachment.object.title %></h4>
            <%= link_to(image_tag(attachment.object.image.medium, class: "show_item_img"), admin_attachment_path(attachment.object)) %>
            <p>
              <%= link_to "Edit", edit_admin_attachment_path(attachment.object) %> - 
              <%= link_to "Delete", admin_attachment_path(attachment.object), method: 'delete', 
                    confirm: "Are you sure you want to delete this image?" 
              %>
            </p>

          <% end %>

        <% end %>

      <% end %>
    </div>
    <br />
    <%= f.input :existing_attachment_id,
                as: "number",
                input_html: {class: 'small'},
                hint: "Or enter ID of an existing image attachment"
        %>
  <% end %>
  
  <%= f.inputs name: "Editor Notes" do %>
    <%= f.input :author_status,
          as: :select,
          label: "Author Status",
          collection: ["Ready to go", "Needs Editing", "Needs Translation", "Needs Image"]
    %>
    <%= f.input :editor_notes, as: "text", input_html: {rows: 4} %>
    <%= f.input :updated_reason, as: "string", hint: "Provide a reason for editing, as short as possible, 2-4 words." %>
  <% end %>
  
  <%= f.actions do %>
    <%= f.action :submit, button_html: { class: "primary", 'data-disable-with' => 'Wait...' } %>
  <% end %>
<% end %>


<script type="text/javascript">
  $(function() {
    $('#item_body').tinymce({
      entity_encoding : "raw",
      // Schema is HTML5 instead of default HTML4
      schema: "html5",
      // End container block element when pressing enter inside an empty block
      end_container_on_empty_block: true,
      theme : "advanced",
      height : "640px",
      plugins : "autolink,lists,spellchecker,pagebreak,style,layer,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",
      // Theme options
      theme_advanced_buttons1 : "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
      theme_advanced_buttons2 : "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
      theme_advanced_buttons3 : "hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
      theme_advanced_buttons4 : "insertlayer,moveforward,movebackward,absolute,|,styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak,|,insertfile,insertimage",
      theme_advanced_toolbar_location : "top",
      theme_advanced_toolbar_align : "left",
      theme_advanced_statusbar_location : "bottom",
      theme_advanced_resizing : true,
      content_css : "<%= asset_path 'tinymce.css' %>",
      // Replace values for the template plugin
      template_replace_values : {
        username : "<%= current_admin_user.email %>",
        staffid : "<%= current_admin_user.id %>"
      }
    });
  });
  
  // 2012-01-24 23:03:22 +0700
  // item_published_at
  $("#item_published_at").AnyTime_picker(
      { 
        format: "%Y-%m-%d %H:%i:%s %+",
        formatUtcOffset: "%: (%@)",
        hideInput: false
      }
  );
  $("#item_expires_on").AnyTime_picker(
      { 
        format: "%Y-%m-%d %H:%i:%s %+",
        formatUtcOffset: "%: (%@)",
        hideInput: false
      }
  );

  $("#item_abstract").counter({
      count: 'up',
      goal: 120
  });
  $("#item_title").counter({
      count: 'up',
      goal: 100
  });
  
  $("#item_attachments_attributes_0_title").counter({
      count: 'up',
      goal: 100
  });

  $("form.formtastic").validate({
    rules: {
      "item[category_id]": { required: true },
      "item[language_id]": { required: true },
      "item[published_at]": { required: true },
      "item[abstract]": { required: true },
      "item[title]": { required: true },
      "item[body]": { required: true }
    }
  });
  
</script>
